const { Events, ButtonStyle, ButtonBuilder, ActionRowBuilder } = require("discord.js");
const ini = require("../config/bot.json");

function extractNickname(text) {
    const match = text.match(/^([\w–∞-—è–ê-–Ø—ë–Å]+)(?:\s*[({\[][\w–∞-—è–ê-–Ø—ë–Å]+[)}\]])?$/);
    return match ? match[1] : null;
}

module.exports = {
    name: Events.MessageCreate,
    async execute(message) {
        if (message.author.bot) return;
        const guildConfig = ini.guilds[message.guild.id];
        if (message.content === "/zayav") {
            const embedInfo = {
                color: 0xa87b00,
                title: "**–ü–æ–¥–∞—á–∞ –∑–∞—è–≤–æ–∫ –≤ –≥–∏–ª—å–¥–∏—é –®–µ—Å—Ç–æ–π –î–æ–º**",
                description: "–ò—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –≤ –≥–∏–ª—å–¥–∏—é./n–û—Ç –≤–∞—Å —Ç—Ä–µ–±—É–µ—Ç—Å—è –ª–∏—à—å –±—ã—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–º –≤ –∏–≥—Ä–µ."
            }
        }
        if (message.channel.id === guildConfig.requestChannel) {
            if (message.member.roles.cache.has(guildConfig.roleId)) return message.delete();
            const nickname = extractNickname(message.content);
            const embedInfo = {
                color: 0xa87b00,
                title: `**–ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–¥–∞—á—É —Ä–æ–ª–∏:**`,
                description: `\`\`\`${message.content}\`\`\``,
                fields: [{ name: "–ü—Ä–æ—Ñ–∏–ª—å:", value: `[${nickname}](https://sirus.su/base/character/x1/${nickname}/)` }],
                timestamp: new Date().toISOString(),
                author: { name: message.author.username, icon_url: message.author.displayAvatarURL(), url: message.author.displayAvatarURL() }
            };
            const buttons = new ActionRowBuilder().addComponents(
                new ButtonBuilder().setCustomId(`acceptRole_${message.author.id}`).setEmoji({ name: "‚úÖ" }).setStyle(ButtonStyle.Success),
                new ButtonBuilder().setCustomId(`declineRole_${message.author.id}`).setEmoji({ name: "‚ùé" }).setStyle(ButtonStyle.Danger),
                new ButtonBuilder().setCustomId(`delete_${message.author.id}`).setEmoji({ name: "üóëÔ∏è" }).setStyle(ButtonStyle.Secondary)
            );
            await message.delete(1);
            await message.channel.send({ content: "", embeds: [embedInfo], components: [buttons] });
        }
    }
};